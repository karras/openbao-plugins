name: push-image

on:
  workflow_dispatch:
    inputs:
      plugin:
        description: Plugin to build
        required: true
        type: string
      version:
        description: Version to publish
        required: true
        type: string
      republish:
        description: Republish existing release (download assets instead of building)
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.matrix.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: matrix
        run: |
          make ci-targets >> "$GITHUB_OUTPUT"
  build:
    runs-on: ubuntu-latest
    needs: matrix
    if: ${{ !inputs.republish }}
    strategy:
      matrix:
        target: ${{ fromJSON(needs.matrix.outputs.targets) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build plugin
        run: |
          make build PLUGIN=${{ inputs.plugin }} TARGET=${{ matrix.target }} VERSION=${{ inputs.version }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-${{ matrix.target }}
          path: bin/*
  download-release:
    runs-on: ubuntu-latest
    needs: matrix
    if: ${{ inputs.republish }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download release assets
        run: |
          mkdir -p bin tmp
          # Download the compressed binary archives
          gh release download ${{ inputs.plugin }}-${{ inputs.version }} --pattern "*.tar.gz" --dir tmp
          gh release download ${{ inputs.plugin }}-${{ inputs.version }} --pattern "*.zip" --dir tmp

          # Extract binaries from archives
          find tmp -name '*.tar.gz' -exec tar xfz \{\} -C bin --wildcards "openbao-plugin-*" \;
          find tmp -name '*.zip' -exec unzip -j \{\} "openbao-plugin-*" -d bin \;

          # Rename ARM binaries from older releases
          for file in bin/*_v8.0; do mv "$file" "${file%_v8.0}_v8"; done

          ls -la bin/
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-republish
          path: bin/*
  push-image:
    runs-on: ubuntu-latest
    needs: [build, download-release]
    if: always() && (needs.build.result == 'success' || needs.download-release.result == 'success')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: install buildah
        run: |
          sudo apt-get -y update
          sudo apt-get -y install buildah
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin
          pattern: plugin-*
          merge-multiple: true
      - name: Push image
        run: |
          make -j $(nproc) push PLUGIN=${{ inputs.plugin }} VERSION=${{ inputs.version }}
        env:
          GH_TOKEN: ${{ github.token }}
