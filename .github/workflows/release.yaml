name: release

on:
  release:
    types:
      - prereleased
      - released

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.matrix.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: matrix
        run: |
          make ci-targets >> "$GITHUB_OUTPUT"
  build:
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      matrix:
        target: ${{ fromJSON(needs.matrix.outputs.targets) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build plugin
        run: |
          make build PLUGIN=$(echo ${{github.ref_name}} | cut -d- -f 1-2) TARGET=${{ matrix.target }} VERSION=$(echo ${{github.ref_name}} | cut -d- -f 3)
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-${{ matrix.target }}
          path: bin/*
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0
      - name: GPG Import
        id: gpg-import
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSWORD }}
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin
          pattern: plugin-*
          merge-multiple: true
      - name: Release plugin
        run: |
          make -j $(nproc) release PLUGIN=$(echo ${{github.ref_name}} | cut -d- -f 1-2) VERSION=$(echo ${{github.ref_name}} | cut -d- -f 3)
        env:
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
      - name: upload assets
        run: |
          gh release upload ${{github.ref_name}} dist/*
        env:
          GH_TOKEN: ${{ github.token }}
  push-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: install buildah
        run: |
          sudo apt-get -y update
          sudo apt-get -y install buildah
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin
          pattern: plugin-*
          merge-multiple: true
      - name: Push image
        run: |
          make -j $(nproc) push PLUGIN=$(echo ${{github.ref_name}} | cut -d- -f 1-2) VERSION=$(echo ${{github.ref_name}} | cut -d- -f 3)
        env:
          GH_TOKEN: ${{ github.token }}
